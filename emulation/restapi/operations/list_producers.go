// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// ListProducersHandlerFunc turns a function with the right signature into a list producers handler
type ListProducersHandlerFunc func(ListProducersParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ListProducersHandlerFunc) Handle(params ListProducersParams) middleware.Responder {
	return fn(params)
}

// ListProducersHandler interface for that can handle valid list producers params
type ListProducersHandler interface {
	Handle(ListProducersParams) middleware.Responder
}

// NewListProducers creates a new http.Handler for the list producers operation
func NewListProducers(ctx *middleware.Context, handler ListProducersHandler) *ListProducers {
	return &ListProducers{Context: ctx, Handler: handler}
}

/*
	ListProducers swagger:route GET /producer-agents listProducers

Get producer agens list
*/
type ListProducers struct {
	Context *middleware.Context
	Handler ListProducersHandler
}

func (o *ListProducers) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewListProducersParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
