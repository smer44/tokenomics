// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "tokenomics",
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "paths": {
    "/config": {
      "get": {
        "summary": "Get current system configuration",
        "operationId": "getConfig",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Configuration"
            }
          }
        }
      },
      "put": {
        "summary": "Update system configuration",
        "operationId": "updateConfig",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Configuration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Configuration updated successfully"
          },
          "400": {
            "description": "Invalid configuration"
          }
        }
      }
    },
    "/ordering-agents": {
      "get": {
        "summary": "Get ordering agents list",
        "operationId": "listOrderingAgents",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderingAgentInfo"
              }
            }
          }
        }
      }
    },
    "/ordering-agents/{id}": {
      "get": {
        "description": "Retrieve the view of an ordering agent.",
        "summary": "Get Ordering Agent View",
        "operationId": "getOrderingAgentView",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/OrderingAgentView"
            }
          }
        }
      },
      "post": {
        "description": "Send a command to an ordering agent.",
        "summary": "Submit Ordering Agent Command",
        "operationId": "sendOrderingAgentCommand",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrderingAgentCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Command processed successfully"
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/producer-agents": {
      "get": {
        "summary": "Get producing agents list",
        "operationId": "listProducingAgents",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProducingAgentInfo"
              }
            }
          }
        }
      }
    },
    "/producing-agents/{id}": {
      "get": {
        "description": "Retrieve the view of a producing agent.",
        "summary": "Get Producing Agent View",
        "operationId": "getProducingAgentView",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ProducingAgentView"
            }
          }
        }
      },
      "post": {
        "description": "Send a command to a producing agent.",
        "summary": "Submit Producing Agent Command",
        "operationId": "sendProducingAgentCommand",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProducingAgentCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Command processed successfully"
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/system": {
      "get": {
        "summary": "Get system state",
        "operationId": "getSystemInfo",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SystemInfo"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tokenomics"
        ],
        "summary": "Reset emulation state",
        "operationId": "resetSystem",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/system/complete-cycle": {
      "post": {
        "tags": [
          "Tokenomics"
        ],
        "summary": "Complete current cycle",
        "operationId": "completeCycle",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CycleResult"
            }
          }
        }
      }
    },
    "/system/start-ordering": {
      "post": {
        "tags": [
          "Tokenomics"
        ],
        "summary": "Complete investment phase",
        "operationId": "startOrdering",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "definitions": {
    "Configuration": {
      "type": "object",
      "required": [
        "cycleEmission",
        "processSheets",
        "producerConfigs"
      ],
      "properties": {
        "cycleEmission": {
          "description": "Amount of tokens emitted each cycle",
          "type": "integer"
        },
        "processSheets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessSheet"
          }
        },
        "producerConfigs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProducingAgentConfig"
          }
        }
      }
    },
    "CycleResult": {
      "type": "object",
      "required": [
        "score"
      ],
      "properties": {
        "score": {
          "type": "integer"
        }
      }
    },
    "OrderingAgentCommand": {
      "description": "Ordering agent command",
      "type": "object",
      "properties": {
        "orders": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "integer"
            }
          }
        }
      },
      "example": {
        "orders": {
          "order-1": {
            "producer-1": 110,
            "producer-2": 350
          },
          "order-2": {
            "producer-2": 10,
            "producer-3": 50
          }
        }
      }
    },
    "OrderingAgentInfo": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Agent ID",
          "type": "string"
        }
      }
    },
    "OrderingAgentView": {
      "description": "Ordering agent view",
      "type": "object",
      "properties": {
        "incoming": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "integer"
            }
          }
        },
        "producers": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/ProducingAgentInfo"
            }
          }
        }
      },
      "example": {
        "incoming": {
          "order-1": {
            "capacity-1": 110,
            "capacity-2": 350
          },
          "order-2": {
            "capacity-3": 55
          }
        },
        "producers": {
          "capacity-1": {
            "producer-1": {
              "capacity": 120,
              "degradation": 5,
              "id": "producer-1",
              "maxCapacity": 150,
              "requestedCapacity": 500,
              "restoration": 20,
              "restorationRunning": "false",
              "upgrade": 10,
              "upgradeRunning": "true"
            }
          }
        }
      }
    },
    "ProcessSheet": {
      "type": "object",
      "required": [
        "product",
        "require"
      ],
      "properties": {
        "product": {
          "description": "Product identifier",
          "type": "integer"
        },
        "require": {
          "description": "Map of capacity type to required capacity",
          "type": "object",
          "additionalProperties": {
            "type": "integer"
          }
        }
      }
    },
    "ProducingAgentCommand": {
      "type": "object",
      "properties": {
        "doRestoration": {
          "description": "Pass true for purchasing of Restoration (Not allowed if Restoration is producing)",
          "type": "boolean"
        },
        "doUpgrade": {
          "description": "Pass true for purchasing of Upgrade (Not allowed if Upgrade is producing)",
          "type": "boolean"
        }
      }
    },
    "ProducingAgentConfig": {
      "type": "object",
      "required": [
        "id",
        "type",
        "capacity",
        "degradation"
      ],
      "properties": {
        "capacity": {
          "description": "Initial capacity",
          "type": "integer"
        },
        "degradation": {
          "description": "Degradation rate",
          "type": "integer"
        },
        "id": {
          "description": "Producer identifier",
          "type": "string"
        },
        "restoration": {
          "$ref": "#/definitions/Restoration"
        },
        "type": {
          "description": "Capacity type",
          "type": "string"
        },
        "upgrade": {
          "$ref": "#/definitions/Upgrade"
        }
      }
    },
    "ProducingAgentInfo": {
      "type": "object",
      "properties": {
        "capacity": {
          "description": "Current capacity value",
          "type": "integer"
        },
        "capacityType": {
          "description": "Capacity type",
          "type": "string"
        },
        "cutOffPrice": {
          "description": "The cut off price in the previous cycle",
          "type": "integer"
        },
        "id": {
          "description": "Agent ID",
          "type": "string"
        },
        "maxCapacity": {
          "description": "Maximum capacity value",
          "type": "integer"
        }
      }
    },
    "ProducingAgentView": {
      "type": "object",
      "properties": {
        "capacity": {
          "description": "Current capacity. Degradates each turn. Could be increased to MaxCapacity with Restoration purchase",
          "type": "integer"
        },
        "degradation": {
          "description": "Capacity decrease in the current cycle",
          "type": "integer"
        },
        "id": {
          "description": "Agent ID",
          "type": "string"
        },
        "maxCapacity": {
          "description": "Maximum capacity. Can be increased with Upgrade purchase",
          "type": "integer"
        },
        "requestedCapacity": {
          "description": "Total capacity was requested in the previous cycle",
          "type": "integer"
        },
        "restoration": {
          "description": "Capacity gain with Restoration",
          "type": "integer"
        },
        "restorationRunning": {
          "description": "Indicates Restoration production is running",
          "type": "boolean"
        },
        "upgrade": {
          "description": "MaxCapacity and Capacity gain with Upgrade",
          "type": "integer"
        },
        "upgradeRunning": {
          "description": "Indicates Upgrade production is running",
          "type": "boolean"
        }
      }
    },
    "Restoration": {
      "type": "object"
    },
    "SystemInfo": {
      "type": "object",
      "properties": {
        "cycleCounter": {
          "type": "integer"
        },
        "state": {
          "type": "string",
          "enum": [
            "OrdersPlacement",
            "Ordering"
          ]
        }
      }
    },
    "Upgrade": {
      "type": "object",
      "properties": {
        "capacity": {
          "description": "Capacity increase after upgrade",
          "type": "integer"
        },
        "product": {
          "description": "Product required for upgrade",
          "type": "integer"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "tokenomics",
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "paths": {
    "/config": {
      "get": {
        "summary": "Get current system configuration",
        "operationId": "getConfig",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Configuration"
            }
          }
        }
      },
      "put": {
        "summary": "Update system configuration",
        "operationId": "updateConfig",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Configuration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Configuration updated successfully"
          },
          "400": {
            "description": "Invalid configuration"
          }
        }
      }
    },
    "/ordering-agents": {
      "get": {
        "summary": "Get ordering agents list",
        "operationId": "listOrderingAgents",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderingAgentInfo"
              }
            }
          }
        }
      }
    },
    "/ordering-agents/{id}": {
      "get": {
        "description": "Retrieve the view of an ordering agent.",
        "summary": "Get Ordering Agent View",
        "operationId": "getOrderingAgentView",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/OrderingAgentView"
            }
          }
        }
      },
      "post": {
        "description": "Send a command to an ordering agent.",
        "summary": "Submit Ordering Agent Command",
        "operationId": "sendOrderingAgentCommand",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrderingAgentCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Command processed successfully"
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/producer-agents": {
      "get": {
        "summary": "Get producing agents list",
        "operationId": "listProducingAgents",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProducingAgentInfo"
              }
            }
          }
        }
      }
    },
    "/producing-agents/{id}": {
      "get": {
        "description": "Retrieve the view of a producing agent.",
        "summary": "Get Producing Agent View",
        "operationId": "getProducingAgentView",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ProducingAgentView"
            }
          }
        }
      },
      "post": {
        "description": "Send a command to a producing agent.",
        "summary": "Submit Producing Agent Command",
        "operationId": "sendProducingAgentCommand",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProducingAgentCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Command processed successfully"
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/system": {
      "get": {
        "summary": "Get system state",
        "operationId": "getSystemInfo",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SystemInfo"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tokenomics"
        ],
        "summary": "Reset emulation state",
        "operationId": "resetSystem",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/system/complete-cycle": {
      "post": {
        "tags": [
          "Tokenomics"
        ],
        "summary": "Complete current cycle",
        "operationId": "completeCycle",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CycleResult"
            }
          }
        }
      }
    },
    "/system/start-ordering": {
      "post": {
        "tags": [
          "Tokenomics"
        ],
        "summary": "Complete investment phase",
        "operationId": "startOrdering",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "definitions": {
    "Configuration": {
      "type": "object",
      "required": [
        "cycleEmission",
        "processSheets",
        "producerConfigs"
      ],
      "properties": {
        "cycleEmission": {
          "description": "Amount of tokens emitted each cycle",
          "type": "integer"
        },
        "processSheets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessSheet"
          }
        },
        "producerConfigs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProducingAgentConfig"
          }
        }
      }
    },
    "CycleResult": {
      "type": "object",
      "required": [
        "score"
      ],
      "properties": {
        "score": {
          "type": "integer"
        }
      }
    },
    "OrderingAgentCommand": {
      "description": "Ordering agent command",
      "type": "object",
      "properties": {
        "orders": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "integer"
            }
          }
        }
      },
      "example": {
        "orders": {
          "order-1": {
            "producer-1": 110,
            "producer-2": 350
          },
          "order-2": {
            "producer-2": 10,
            "producer-3": 50
          }
        }
      }
    },
    "OrderingAgentInfo": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Agent ID",
          "type": "string"
        }
      }
    },
    "OrderingAgentView": {
      "description": "Ordering agent view",
      "type": "object",
      "properties": {
        "incoming": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "integer"
            }
          }
        },
        "producers": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/ProducingAgentInfo"
            }
          }
        }
      },
      "example": {
        "incoming": {
          "order-1": {
            "capacity-1": 110,
            "capacity-2": 350
          },
          "order-2": {
            "capacity-3": 55
          }
        },
        "producers": {
          "capacity-1": {
            "producer-1": {
              "capacity": 120,
              "degradation": 5,
              "id": "producer-1",
              "maxCapacity": 150,
              "requestedCapacity": 500,
              "restoration": 20,
              "restorationRunning": "false",
              "upgrade": 10,
              "upgradeRunning": "true"
            }
          }
        }
      }
    },
    "ProcessSheet": {
      "type": "object",
      "required": [
        "product",
        "require"
      ],
      "properties": {
        "product": {
          "description": "Product identifier",
          "type": "integer"
        },
        "require": {
          "description": "Map of capacity type to required capacity",
          "type": "object",
          "additionalProperties": {
            "type": "integer"
          }
        }
      }
    },
    "ProducingAgentCommand": {
      "type": "object",
      "properties": {
        "doRestoration": {
          "description": "Pass true for purchasing of Restoration (Not allowed if Restoration is producing)",
          "type": "boolean"
        },
        "doUpgrade": {
          "description": "Pass true for purchasing of Upgrade (Not allowed if Upgrade is producing)",
          "type": "boolean"
        }
      }
    },
    "ProducingAgentConfig": {
      "type": "object",
      "required": [
        "id",
        "type",
        "capacity",
        "degradation"
      ],
      "properties": {
        "capacity": {
          "description": "Initial capacity",
          "type": "integer"
        },
        "degradation": {
          "description": "Degradation rate",
          "type": "integer"
        },
        "id": {
          "description": "Producer identifier",
          "type": "string"
        },
        "restoration": {
          "$ref": "#/definitions/Restoration"
        },
        "type": {
          "description": "Capacity type",
          "type": "string"
        },
        "upgrade": {
          "$ref": "#/definitions/Upgrade"
        }
      }
    },
    "ProducingAgentInfo": {
      "type": "object",
      "properties": {
        "capacity": {
          "description": "Current capacity value",
          "type": "integer"
        },
        "capacityType": {
          "description": "Capacity type",
          "type": "string"
        },
        "cutOffPrice": {
          "description": "The cut off price in the previous cycle",
          "type": "integer"
        },
        "id": {
          "description": "Agent ID",
          "type": "string"
        },
        "maxCapacity": {
          "description": "Maximum capacity value",
          "type": "integer"
        }
      }
    },
    "ProducingAgentView": {
      "type": "object",
      "properties": {
        "capacity": {
          "description": "Current capacity. Degradates each turn. Could be increased to MaxCapacity with Restoration purchase",
          "type": "integer"
        },
        "degradation": {
          "description": "Capacity decrease in the current cycle",
          "type": "integer"
        },
        "id": {
          "description": "Agent ID",
          "type": "string"
        },
        "maxCapacity": {
          "description": "Maximum capacity. Can be increased with Upgrade purchase",
          "type": "integer"
        },
        "requestedCapacity": {
          "description": "Total capacity was requested in the previous cycle",
          "type": "integer"
        },
        "restoration": {
          "description": "Capacity gain with Restoration",
          "type": "integer"
        },
        "restorationRunning": {
          "description": "Indicates Restoration production is running",
          "type": "boolean"
        },
        "upgrade": {
          "description": "MaxCapacity and Capacity gain with Upgrade",
          "type": "integer"
        },
        "upgradeRunning": {
          "description": "Indicates Upgrade production is running",
          "type": "boolean"
        }
      }
    },
    "Restoration": {
      "type": "object"
    },
    "SystemInfo": {
      "type": "object",
      "properties": {
        "cycleCounter": {
          "type": "integer"
        },
        "state": {
          "type": "string",
          "enum": [
            "OrdersPlacement",
            "Ordering"
          ]
        }
      }
    },
    "Upgrade": {
      "type": "object",
      "properties": {
        "capacity": {
          "description": "Capacity increase after upgrade",
          "type": "integer"
        },
        "product": {
          "description": "Product required for upgrade",
          "type": "integer"
        }
      }
    }
  }
}`))
}
